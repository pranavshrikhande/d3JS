SVG: scalable vector graphics, can add

rectangle,
text, path circle

-------------------
API
------------------

so we have API' for

Layout calculation
------
    -Force
    -Scales
    -Continuous
    -Quantize
    -Quantile
    -Threshold
    -Ordinal

DOM Manipulation
-----
    Selections
    Selecting
    Modifying

Finishing touches
---
    Transitions


- Now lets say you have to make a selection to a child element


#Data Binding
------------------------
- First we need to bind data with element   
- we take data, and map it with DOM element
- two things
    datum: 
        lets say we have bar_data= [10,20,40,30,50,10]

        as we have 6 data points , we have 6 rects below
        <svg>
            <rect/>
            <rect/>
            <rect/>
            <rect/>
            <rect/>
            <rect/> 
        </svg>

    d3.select('svg').select('rect').datum(bar_data)

    what this does is, the very first rect will have all the 6 data in it
    but that's not the objective, we want to have single data in all 6 rect's


    we use datum for circle, 
        d3.select('circle').datum('6')

    data:
        bar_data=[10,20,30,10,40];

        <svg>
            <rect/>
            <rect/>
            <rect/>
            <rect/>
            <rect/>
        </svg>


        d3.select('svg').selectAll('rect').data(bar_data)

------------------
Attr and style
-------------------

attr: takes a selected element and can set its attribute
        i,e border, text can change it

        data:
        bar_data=[10,20,30,10,40];

        <svg>
            <rect/>
            <rect/>
            <rect/>
            <rect/>
            <rect/>
        </svg>

    svg.selectAll('rect').data(bar_data)
        .attr('name','')

    now attr takes two args 
        1st is name of attribute that needs to be changed
        2nd is value
                this can be constant i.e height, width
                or we can pass a function (d,i)
                        d: is data related to each element
                        i: index
                
                    that means

        <svg>           d  | i
            <rect/>     10 | 0      0*50=0
            <rect/>     20 | 1      1*50=50
            <rect/>     40 | 2      2*50=100
            <rect/>     30 | 3      3*50=150
            <rect/>     10 | 4      4*50=200
        </svg>

        now using these we can change

     now lets see example where we have to change x axis

    const barWidth=50; we see how these are set in rect's above
     
    .attr('x',(d,i)=> i*50)


    now we need to have it for height

    .attr('height',(d)=>d)   

    now to fill color

    .attr("fill","pink")


    Now we see our graph is inverted, 

to fix this we have to make calculation, so that it substracts the height from total height that is set

--------------------------
CREATING DOM FROM DATA
--------------------------

- Lets say we have data of 100 points and it might change, decrease or increase,
then we need to dynamically add rects for it. we cannot hardcode number of rects and then map data to it

- so we would remove rects  and work on empty svg, we would append and enter accordingly

svg.select("rect")

- now we see we donot have rect, here d3 does a empty selection, but as soon as we give .data(bar_data), it understands
    we have 5 data points inside bar_data, hare it should be array
    next we do .enter(), this creates 5 placeholders 
    next .append(), this creates elements, make sure you match the args in what was in .select(), it should be same

    svg.selectAll("rect")
        .data(bar_data)
        .enter()
        .append("rect")
        